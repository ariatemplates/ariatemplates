doctype html
html
	head
		meta(charset="utf-8")
		meta(http-equiv="X-UA-Compatible", content="IE=edge,chrome=1")
		meta(name="viewport", content="width=device-width, initial-scale=1.0")

		title Playground - Aria Templates

		script.
			var Aria = {
				debug : true
			};
		script(src=urls.framework)
		script(src=urls.skin)
		style.
			html {
				overflow : hidden;
			}
			body {
				margin : 0px;
				background-color : #FAFAFA;
				font-family: tahoma,arial,helvetica,sans-serif;
				font-size: 11px;
			}
			#logs {
				z-index: 5;
				position: fixed;
				bottom: 0;
				right: 0;
				background-color: #F4F4F4;
				border-left: 1px solid #999;
				border-top: 1px solid #999;
				box-shadow: 0 0 4px #777;
				overflow: auto;
			}
			#logs h2 {
				margin: 0em;
				margin-bottom: 1.3em;
				margin-left: 0.3em;
				cursor: pointer;
			}
			#logs h2:hover::after {
				content: "<- Click to minimize";
				margin-left: 10px;
				font-size: 0.7em;
				font-weight: normal;
			}
			#logs p {
				margin: 0;
			}
			#logs hr {
				margin: 0;
				border: 0;
				margin-top: 1em;
				margin-bottom: 2px;
				border-top: 1px solid #999;
				font-size: 0;
			}
			#logs em {
				font-style: normal;
				color: #999;
				margin-left: 0.3em;
			}
			#logs em::after {
				content: ": ";
			}
			.hidden {
				width: 0;
				height: 0;
				font-size: 0;
				visibility: hidden;
			}
			.minimized {
				z-index: 4;
				position: fixed;
				bottom: 0;
				right: 0;
				width: auto;
				height: auto;
				background-color: #F4F4F4;
				border-left: 1px solid #999;
				border-top: 1px solid #999;
				box-shadow: 0 0 4px #777;
				overflow: none;
				padding: 0 10px;
				cursor: pointer;
			}
			.maximized {
				width: 50%;
				height: 250px;
			}
			#logs {
				transition-property: width, height, visibility;
				transition-duration: 0.3s;
			}
			#maximize {
				transition: width 0.4s ease-in, height 0.4s ease-in;
			}
	body(data-path=path, data-model=model)
		div#root
		div#logs.hidden
		div#maximize.minimized
			p Display logs

		if dev
			script.
				Aria.rootFolderPath += "../";
				aria.core.DownloadMgr.updateRootMap({
					"aria" : {
						"*" : Aria.rootFolderPath + "dev/"
					}
				});

		script.
			(function () {
				aria.core.AppEnvironment.setEnvironment({
					contextualMenu:{enabled:true} // to get the right-click refresh menu
				}, null, true);

				var width = {min : 180};
				var height = {min : 342};

				// set the minimum dimension of this page
				Aria.setRootDim({
					width: width,
					height: height
				});

				var classpath = document.body.getAttribute("data-path");

				Aria.load({
					classes : ["aria.utils.Json", "aria.core.log.DivAppender", "aria.utils.Event"],
					oncomplete : {
						fn : function () {
							var div = document.getElementById("logs");
							var appender = new aria.core.log.DivAppender(div);
							appender._showSeparator = function () {
								this._write("<hr/>");
							};
							appender._scrollDown = function () {
								this.div.className = "maximized";
								this.div.lastChild.scrollIntoView(false);
							};
							aria.core.Log.addAppender(appender);

							var logs = document.getElementById("logs");
							var maximize = document.getElementById("maximize");

							aria.utils.Event.addListener(logs, "click", {
								fn : function (evt) {
									var target = evt.target || window.event.srcElement;
									if (target.tagName.toUpperCase() === "H2") {
										this.className = "hidden";
										maximize.className = "minimized";
									}
								}
							});
							aria.utils.Event.addListener(maximize, "click", {
								fn : function (evt) {
									this.className = "hidden";
									logs.className = "maximized";
								}
							});

							var model = aria.utils.Json.load(document.body.getAttribute("data-model")) || {};

							Aria.loadTemplate({
								classpath: classpath,
								div: "root",
								width: width,
								height: height,
								data: model
							});
						},
						scope : {}
					}
				});
			})()
